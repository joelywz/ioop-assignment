<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>